<?php
$form = $this->form;
$job = $this->job;

$form->setAttribute('action', $this->url('jobs.files', array('action' => 'save', 'jid' => $this->escapeHtml($job->getId()))));
$form->setAttribute('method', 'POST');
$form->setAttribute('enctype', 'multipart/form-data');
$form->setAttribute('novalidate', 'true');
$form->prepare();
?>

            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="panel-title">
                        <?php echo $this->translate('job.entity'); ?> #<?php echo $this->escapeHtml($job->getId()); ?>: <?php echo $this->escapeHtml($job->getName()); ?>
                        <?php foreach ($job->getLabels() as $label): ?>
                            <span class="label label-default pull-right" style="background-color: <?php echo $this->escapeHtml($label->getColour()); ?>"><?php echo $this->escapeHtml($label->getName()); ?></span>
                        <?php endforeach; ?>
                    </span>
                </div>
                <div class="panel-body table-responsive">
                    <table class="table">
                        <thead>
                            <th></th>
                            <th></th>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong><?php echo $this->translate('job.creation-time'); ?></strong></td>
                                <td><?php echo $job->getCreationTime()->format('d M Y h:i T'); ?></td>
                            </tr>
                            <tr>
                                <td><strong><?php echo $this->translate('job.description'); ?></strong></td>
                                <td><?php echo ($job->getDescription()) ? $this->escapeHtml($job->getDescription()) : $this->translate('common.unspecified'); ?></td>
                            </tr>
                            <tr>
                                <td><strong><?php echo $this->translate('job.comments'); ?></strong></td>
                                <td><?php echo ($job->getComments()) ? $this->escapeHtml($job->getComments()) : $this->translate('common.unspecified'); ?></td>
                            </tr>
                            <tr>
                                <td><strong><?php echo $this->translate('job.owner'); ?></strong></td>
                                <td><?php echo $job->getOwner()->getName(); ?></td>
                            </tr>
                            <tr>
                                <td colspan="2">
                                    <div class="pull-right">
                                        <?php if ($job->getStatus() == $job::STATUS_OPEN && $this->authorize()->isAuthorized($this->identity(), 'job', 'save', $job)): ?>
                                        <a role="button" class="btn btn-primary btn-sm" href="<?php echo $this->url('jobs', array('action' => 'save', 'id' => $this->escapeHtml($job->getId()))); ?>">
                                            <span class="glyphicon glyphicon-edit"></span> <?php echo $this->translate('common.edit'); ?>
                                        </a>
                                        <?php endif; ?>
                                        <?php if ($job->getStatus() == $job::STATUS_OPEN && $this->authorize()->isAuthorized($this->identity(), 'job', 'close', $job)): ?>
                                        <a role="button" class="btn btn-danger btn-sm" data-remote="false" data-toggle="modal" data-target="#confirm-modal" href="<?php echo $this->url('jobs', array('action' => 'close', 'id' => $this->escapeHtml($job->getId()))); ?>">
                                            <span class="glyphicon glyphicon-eye-close"></span> <?php echo $this->translate('job.close'); ?>
                                        </a>
                                        <?php endif; ?>
                                        <?php if ($job->getStatus() == $job::STATUS_CLOSED && $this->authorize()->isAuthorized($this->identity(), 'job', 'open', $job)): ?>
                                        <a role="button" class="btn btn-danger btn-sm" data-remote="false" data-toggle="modal" data-target="#confirm-modal" href="<?php echo $this->url('jobs', array('action' => 'open', 'id' => $this->escapeHtml($job->getId()))); ?>">
                                            <span class="glyphicon glyphicon-eye-open"></span> <?php echo $this->translate('job.open'); ?>
                                        </a>
                                        <?php endif; ?>
                                        <?php if ($job->getStatus() == $job::STATUS_CLOSED && $this->authorize()->isAuthorized($this->identity(), 'job', 'delete', $job)): ?>
                                        <a role="button" class="btn btn-danger btn-sm" data-remote="false" data-toggle="modal" data-target="#confirm-modal" href="<?php echo $this->url('jobs', array('action' => 'delete', 'id' => $this->escapeHtml($job->getId()))); ?>">
                                            <span class="glyphicon glyphicon-remove"></span> <?php echo $this->translate('common.delete'); ?>
                                        </a>
                                        <?php endif; ?>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="panel-title">
                        <?php echo $this->translate('user.role-customer'); ?>
                    </span>
                </div>
                <div class="panel-body">
                    <div>
                        <?php echo !is_null($job->getCustomer()) ? $this->escapeHtml($job->getCustomer()->getName()) : $this->translate('common.unspecified'); ?>
                        <br/>
                        <?php echo !is_null($job->getCustomer()) ? nl2br($this->escapeHtml($job->getCustomer()->getAddress())) : ''; ?>
                    </div>
                    <?php if ($this->identity()->getRole() != \Application\Entity\User::ROLE_CUSTOMER): ?>
                    <div class="pull-right">
                        <a role="button" class="btn btn-primary btn-sm" href="<?php echo $this->url('jobs', array('action' => 'save', 'id' => $this->escapeHtml($job->getId()))); ?>">
                            <span class="glyphicon glyphicon-edit"></span> <?php echo $this->translate('common.edit'); ?>
                        </a>
                    </div>
                    <?php endif; ?>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="panel-title">
                        <?php echo $this->translate('job.contract'); ?>
                    </span>
                </div>
                <div class="panel-body table-responsive">
                    <table class="table">
                        <thead>
                            <th></th>
                            <th></th>
                        </thead>
                        <tbody>
                            <tr>
                                <td><strong><?php echo $this->translate('job.contract-type'); ?></strong></td>
                                <td>
                                <?php if ($job->getContractType() == \Application\Entity\Job::CONTRACT_TYPE_FIXED): ?>
                                    <?php echo $this->translate('job.contract-type-fixed'); ?>
                                <?php elseif ($job->getContractType() == \Application\Entity\Job::CONTRACT_TYPE_VARIABLE): ?>
                                    <?php echo $this->translate('job.contract-type-variable'); ?>
                                <?php else: ?>
                                    <?php echo $this->translate('common.unspecified'); ?>
                                <?php endif; ?>
                                </td>
                            </tr>
                            <tr>
                                <td><strong><?php echo $this->translate('job.contract-rate'); ?></strong></td>
                                <td><?php echo ($job->getContractRate()) ? $this->escapeHtml($job->getContractRate()) : $this->translate('common.unspecified'); ?></td>
                            </tr>
                        </tbody>
                    </table>
                    <?php if ($this->identity()->getRole() != \Application\Entity\User::ROLE_CUSTOMER): ?>
                    <div class="pull-right">
                        <a role="button" class="btn btn-primary btn-sm" href="<?php echo $this->url('jobs', array('action' => 'save', 'id' => $this->escapeHtml($job->getId()))); ?>">
                            <span class="glyphicon glyphicon-edit"></span> <?php echo $this->translate('common.edit'); ?>
                        </a>
                    </div>
                    <?php endif; ?>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="panel-title">
                        <?php echo $this->translate('file.current-files'); ?>
                    </span>
                    <div class="pull-right">
                        <?php if ($job->getStatus() == $job::STATUS_OPEN && $this->authorize()->isAuthorized($this->identity(), 'job.file', 'save', $job)): ?>
                        <a role="button" class="btn btn-primary btn-sm btn-file-add" href="<?php echo $this->url('jobs.files', array('action' => 'save', 'jid' => $this->escapeHtml($job->getId()))); ?>">
                            <span class="glyphicon glyphicon-plus"></span> <?php echo $this->translate('file.add'); ?>
                        </a>
                        <div class="form-file-add">
                            <?php echo $this->form()->openTag($form); ?>
                                <?php echo $this->formFile($form->get('file')); ?>
                            <?php echo $this->form()->closeTag($form); ?>
                        </div>
                        <?php endif; ?>
                    </div>
                </div>
                <div class="panel-body table-responsive">
                    <?php if ($job->getFiles()->count()): ?>
                    <table class="table">
                        <thead>
                            <tr>
                                <th><?php echo $this->translate('file.name'); ?></th>
                                <th><?php echo $this->translate('file.creation-time'); ?></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($job->getFiles() as $file): ?>
                            <tr>
                                <td><?php echo $this->escapeHtml($file->getFilename()); ?></td>
                                <td><?php echo $file->getCreationTime()->format('d M Y h:i T'); ?></td>
                                <td>
                                    <?php if ($this->authorize()->isAuthorized($this->identity(), 'job.file', 'download', $job)): ?>
                                    <a role="button" class="btn btn-primary btn-sm" href="<?php echo $this->url('jobs.files', array('action' => 'download', 'id' => $this->escapeHtml($file->getId()), 'jid' => $this->escapeHtml($job->getId()))); ?>">
                                        <span class="glyphicon glyphicon-download"></span> <?php echo $this->translate('common.download'); ?>
                                    </a>
                                    <?php endif; ?>
                                </td>
                                <td>
                                    <?php if ($job->getStatus() == $job::STATUS_OPEN && $this->authorize()->isAuthorized($this->identity(), 'job.file', 'delete', $job)): ?>
                                    <a role="button" class="btn btn-danger btn-sm" data-remote="false" data-toggle="modal" data-target="#confirm-modal" href="<?php echo $this->url('jobs.files', array('action' => 'delete', 'id' => $this->escapeHtml($file->getId()), 'jid' => $this->escapeHtml($job->getId()))); ?>">
                                        <span class="glyphicon glyphicon-remove"></span> <?php echo $this->translate('common.delete'); ?>
                                    </a>
                                    <?php endif; ?>
                                </td>
                            </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                    <?php endif; ?>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="panel-title">
                        <?php echo $this->translate('permission.collaborators'); ?>
                    </span>
                    <div class="pull-right">
                        <?php if ($job->getStatus() == $job::STATUS_OPEN && $this->authorize()->isAuthorized($this->identity(), 'job.permission', 'grant', $job)): ?>
                        <a role="button" class="btn btn-primary btn-sm" href="<?php echo $this->url('jobs.permissions', array('action' => 'grant', 'jid' => $this->escapeHtml($job->getId()))); ?>">
                            <span class="glyphicon glyphicon-plus"></span> <?php echo $this->translate('permission.grant'); ?>
                        </a>
                        <?php endif; ?>
                    </div>
                </div>
                <div class="panel-body table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th><?php echo $this->translate('user.name'); ?></th>
                                <th><?php echo $this->translate('permission.permissions'); ?></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($job->getPermissions() as $permission): ?>
                            <tr>
                                <td><?php echo ($permission->getUser()->getId() == $this->identity()->getId()) ? sprintf('%s', '<strong>' . $this->translate('user.self') . '</strong>') : $this->escapeHtml($permission->getUser()->getName()); ?></td>
                                <td>
                                    <?php switch ($permission->getName()):
                                        case $job::PERMISSION_MANAGE:
                                            echo ($permission->getUser()->getId() == $this->identity()->getId()) ? sprintf('%s', '<strong>' . $this->translate('job.permission-manage') . '</strong>') : $this->translate('job.permission-manage');
                                            break;
                                        case $job::PERMISSION_EDIT:
                                            echo ($permission->getUser()->getId() == $this->identity()->getId()) ? sprintf('%s', '<strong>' . $this->translate('job.permission-edit') . '</strong>') : $this->translate('job.permission-edit');
                                            break;
                                        case $job::PERMISSION_VIEW:
                                            echo ($permission->getUser()->getId() == $this->identity()->getId()) ? sprintf('%s', '<strong>' . $this->translate('job.permission-view') . '</strong>') : $this->translate('job.permission-view');
                                            break; ?>
                                    <?php endswitch; ?>
                                </td>
                                <td>
                                    <?php if ($this->authorize()->isAuthorized($this->identity(), 'job.permission', 'revoke', $job)): ?>
                                        <?php if (($permission->getUser()->getId() != $this->identity()->getId()) && ($permission->getName() !=  $job::PERMISSION_MANAGE)): ?>
                                    <a role="button" class="btn btn-primary btn-sm" href="<?php echo $this->url('jobs.permissions', array('action' => 'revoke', 'jid' => $this->escapeHtml($job->getId()), 'id' => $this->escapeHtml($permission->getId()))); ?>">
                                        <span class="glyphicon glyphicon-remove"></span> <?php echo $this->translate('permission.revoke'); ?>
                                    </a>
                                        <?php endif; ?>
                                    <?php endif; ?>
                                </td>
                            </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>
            </div>


            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <span class="panel-title">
                        <?php echo $this->translate('activity-stream.recent-activity'); ?>
                    </span>
                </div>
                <div class="panel-body table-responsive activity-stream">
                    <table class="table">
                        <thead>
                        </thead>
                        <tbody>
                        <?php if (count($this->activities)): ?>
                            <?php foreach ($this->activities as $activity): ?>
                                <?php if ($activity->getOperation() == $activity::OPERATION_UPDATE): ?>
                                    <?php $properties = json_decode($activity->getData(), true); ?>
                                    <?php foreach ($properties as $propertyName => $propertyValues): ?>
                                    <?php if (in_array($propertyName, ['filenameHash'])) {
                                        continue;
                                    };
                                    ?>
                                    <?php switch ($propertyName) {
                                        case 'customer':
                                            $propertyName = 'customer-account';
                                            break;
                                        case 'contractType':
                                            $propertyName = 'contract-type';
                                            break;
                                        case 'contractRate':
                                            $propertyName = 'contract-rate';
                                            break;
                                    }
                                    ?>
                            <tr>
                                <td>
                                        <?php
                                        if ($propertyName == 'status') {
                                            if ($propertyValues[1] == 0) {
                                                echo sprintf(
                                                    $this->translate('activity-stream.closed'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    strtolower($this->translate('job.entity'))
                                                );
                                            } else if ($propertyValues[1] == 1) {
                                                echo sprintf(
                                                    $this->translate('activity-stream.opened'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    strtolower($this->translate('job.entity'))
                                                );
                                            }
                                        } else if ($propertyName == 'contract-type') {
                                                if ($propertyValues[0] == \Application\Entity\Job::CONTRACT_TYPE_FIXED && $propertyValues[1] == \Application\Entity\Job::CONTRACT_TYPE_VARIABLE) {
                                                    echo sprintf(
                                                        $this->translate('activity-stream.updated'),
                                                        '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                        strtolower($this->translate('job.contract-type')),
                                                        '<strong>' . $this->translate('job.contract-type-fixed') . '</strong>',
                                                        '<strong>' . $this->translate('job.contract-type-variable') . '</strong>'
                                                    );
                                                } else if ($propertyValues[0] == \Application\Entity\Job::CONTRACT_TYPE_VARIABLE && $propertyValues[1] == \Application\Entity\Job::CONTRACT_TYPE_FIXED) {
                                                    echo sprintf(
                                                        $this->translate('activity-stream.updated'),
                                                        '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                        strtolower($this->translate('job.contract-type')),
                                                        '<strong>' . $this->translate('job.contract-type-variable') . '</strong>',
                                                        '<strong>' . $this->translate('job.contract-type-fixed') . '</strong>'
                                                    );
                                                }
                                        } else {
                                            echo sprintf(
                                                $this->translate('activity-stream.updated'),
                                                '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                strtolower($this->translate('job.' . $propertyName)),
                                                !empty($propertyValues[0]) ? '<strong>' . $this->escapeHtml($propertyValues[0]) . '</strong>' : '<strong>(' . $this->translate('activity-stream.empty') . ')</strong>',
                                                !empty($propertyValues[1]) ? '<strong>' . $this->escapeHtml($propertyValues[1]) . '</strong>' : '<strong>(' . $this->translate('activity-stream.empty') . ')</strong>'
                                            );
                                        }
                                        ?>
                                </td>
                                <td><?php echo \Carbon\Carbon::instance($activity->getCreationTime())->diffForHumans(); ?></td>
                            </tr>
                                    <?php endforeach; ?>
                                    <?php continue; ?>
                                <?php else: ?>
                            <tr>
                                <td>
                                <?php
                                    if ($activity->getOperation() == $activity::OPERATION_CREATE) {
                                        switch ($activity->getEntityType()) {
                                            case $activity::ENTITY_TYPE_FILE:
                                                $properties = json_decode($activity->getData(), true);
                                                echo sprintf(
                                                    $this->translate('activity-stream.associated'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    '<strong>' . $properties['filename'] . '</strong>',
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity')),
                                                    strtolower($this->translate(strtolower($activity->getAssociatedEntityType()).'.entity'))
                                                );
                                                break;
                                            default:
                                                echo sprintf(
                                                    $this->translate('activity-stream.created'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                                );
                                                break;
                                        }
                                    } else if ($activity->getOperation() == $activity::OPERATION_DELETE) {
                                        switch ($activity->getEntityType()) {
                                            case $activity::ENTITY_TYPE_FILE:
                                                $properties = json_decode($activity->getData(), true);
                                                echo sprintf(
                                                    $this->translate('activity-stream.dissociated'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    '<strong>' . $properties['filename'] . '</strong>',
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity')),
                                                    strtolower($this->translate(strtolower($activity->getAssociatedEntityType()).'.entity'))
                                                );
                                                break;
                                            default:
                                                echo sprintf(
                                                    $this->translate('activity-stream.deleted'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                                );
                                                break;
                                        }
                                    } else if ($activity->getOperation() == $activity::OPERATION_ASSOCIATE) {
                                        switch ($activity->getAssociatedEntityType()) {
                                            case $activity::ENTITY_TYPE_LABEL:
                                                $properties = json_decode($activity->getData(), true);
                                                echo sprintf(
                                                    $this->translate('activity-stream.associated'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    '<span class="label label-default" style="background-color: ' . $properties['colour'] . '">' .  $properties['name']. '</span>',
                                                    strtolower($this->translate(strtolower($activity->getAssociatedEntityType()).'.entity')),
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                                );
                                                break;
                                        }
                                    } else if ($activity->getOperation() == $activity::OPERATION_DISSOCIATE) {
                                        switch ($activity->getAssociatedEntityType()) {
                                            case $activity::ENTITY_TYPE_LABEL:
                                                $properties = json_decode($activity->getData(), true);
                                                echo sprintf(
                                                    $this->translate('activity-stream.dissociated'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    '<span class="label label-default" style="background-color: ' . $properties['colour'] . '">' .  $properties['name']. '</span>',
                                                    strtolower($this->translate(strtolower($activity->getAssociatedEntityType()).'.entity')),
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                                );
                                                break;
                                        }
                                    } else if ($activity->getOperation() == $activity::OPERATION_REQUEST) {
                                        $properties = json_decode($activity->getData(), true);
                                        echo sprintf(
                                            $this->translate('activity-stream.requested'),
                                            '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                            '<strong>' .  $properties['filename']. '</strong>',
                                            strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                        );
                                    } elseif ($activity->getOperation() == $activity::OPERATION_GRANT) {
                                        switch ($activity->getAssociatedEntityType()) {
                                            case $activity::ENTITY_TYPE_USER:
                                                $properties = json_decode($activity->getData(), true);
                                                echo sprintf(
                                                    $this->translate('activity-stream.granted'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    '<strong>' .  $properties['user']['name']. '</strong>',
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                                );
                                                break;
                                        }
                                    } else if ($activity->getOperation() == $activity::OPERATION_REVOKE) {
                                        switch ($activity->getAssociatedEntityType()) {
                                            case $activity::ENTITY_TYPE_USER:
                                                $properties = json_decode($activity->getData(), true);
                                                echo sprintf(
                                                    $this->translate('activity-stream.revoked'),
                                                    '<strong>' . $this->escapeHtml($activity->getUser()->getName()) . '</strong>',
                                                    '<strong>' .  $properties['user']['name']. '</strong>',
                                                    strtolower($this->translate(strtolower($activity->getEntityType()).'.entity'))
                                                );
                                                break;
                                        }
                                    }
                                ?>
                                <?php endif; ?>
                                </td>
                                <td>
                                <?php echo \Carbon\Carbon::instance($activity->getCreationTime())->diffForHumans(); ?></td>
                            </tr>
                            <?php endforeach; ?>
                        <?php else: ?>
                            <tr>
                                <td colspan="2">No recent activity to report.</td>
                            </tr>
                        <?php endif; ?>
                        </tbody>
                    </table>
                </div>
            </div>

            <script>
            $( document ).ready(function() {

                // trigger the file selector
                // in the hidden file upload form
                // when the 'add' button is clicked
                // @see http://stackoverflow.com/questions/793014/jquery-trigger-file-input
                $('.btn-file-add').click(function(){
                    $('input[name=file]').click();
                    return false;
                });

                // automatically submit the file upload form
                // when a file is selected
                $('input[name=file]').change(function() {
                  $('#file').submit();
                });

            });
            </script>
